{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/static/js/config-providers.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","fn","showHideProviders","each","providerName","this","prop","val","show","hide","ifExists","loopThroughArray","searchFor","found","forEach","rootObject","name","console","log","getCategories","isDefault","selectedProvider","url","key","params","api_key","wrapInner","MEDUSA","config","themeSpinner","getJSON","data","updateNewznabCaps","debug","tv_categories","always","empty","newznabProviders","torrentRssProviders","addProvider","id","cat","showProvider","trim","test","match","newData","append","toAdd","anonURL","sortable","makeNewznabProviderString","addTorrentRssProvider","cookies","titleTag","populateTorrentRssSection","makeTorrentRssProviderString","updateProvider","populateNewznabSection","deleteProvider","remove","updateTorrentRssProvider","deleteTorrentRssProvider","rrcat","newCatOptions","split","push","text","value","replaceOptions","newznabProvidersCapabilities","newzNabCaps","categories","newzNabCap","Array","isArray","newCapOptions","categorySet","provStrings","hasOwnProperty","join","provider","refreshProviderList","idArr","finalArr","checked","is","refreshEditAProvider","addClass","appendTo","len","replace","document","getElementsByClassName","innerHTML","on","providerId","substring","map","opt","toArray","newOptions","selectedCat","undefined","error","success","alert","title_tag","replaceWith","clone","find","makeTorrentOptionString","seedRatio","seedTime","processMet","options","self","index","option","$option","placeholder","[object Object]","disableSelection"],"mappings":"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","file":"config-providers.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$.fn.showHideProviders = function() {\n    $('.providerDiv').each(function() {\n        const providerName = $(this).prop('id');\n        const selectedProvider = $('#editAProvider :selected').val();\n\n        if (selectedProvider + 'Div' === providerName) {\n            $(this).show();\n        } else {\n            $(this).hide();\n        }\n    });\n};\n\nconst ifExists = (loopThroughArray, searchFor) => {\n    let found = false;\n\n    loopThroughArray.forEach(rootObject => {\n        if (rootObject.name === searchFor) {\n            found = true;\n        }\n        console.log(rootObject.name + ' while searching for: ' + searchFor);\n    });\n    return found;\n};\n\n/**\n * Gets categories for the provided newznab provider.\n * @param {String} isDefault\n * @param {Array} selectedProvider\n * @return no return data. Function updateNewznabCaps() is run at callback\n */\n$.fn.getCategories = function(isDefault, selectedProvider) {\n    const [name, url, key] = selectedProvider;\n\n    if (!name || !url || !key) {\n        return;\n    }\n\n    const params = { url, name, api_key: key }; // eslint-disable-line camelcase\n\n    $('.updating_categories').wrapInner('<span><img src=\"images/loading16' + MEDUSA.config.themeSpinner + '.gif\"> Updating Categories ...</span>'); // eslint-disable-line no-undef\n    const jqxhr = $.getJSON('config/providers/getNewznabCategories', params, function(data) {\n        $(this).updateNewznabCaps(data, selectedProvider);\n        console.debug(data.tv_categories);\n    });\n    jqxhr.always(() => {\n        $('.updating_categories').empty();\n    });\n};\n\nconst newznabProviders = [];\nconst torrentRssProviders = [];\n\n$.fn.addProvider = function(id, name, url, key, cat, isDefault, showProvider) { // eslint-disable-line max-params\n    url = $.trim(url);\n    if (!url) {\n        return;\n    }\n\n    if (!/^https?:\\/\\//i.test(url)) {\n        url = 'http://' + url;\n    }\n\n    if (url.match('/$') === null) {\n        url += '/';\n    }\n\n    const newData = [isDefault, [name, url, key, cat]];\n    newznabProviders[id] = newData;\n\n    $('#editANewznabProvider').append('<option value=' + id + '>' + name + '</option>');\n    $('select#editANewznabProvider').prop('selectedIndex', 0);\n\n    if ($('#provider_order_list > #' + id).length === 0 && showProvider !== false) {\n        const toAdd = '<li class=\"ui-state-default\" id=\"' + id + '\"> <input type=\"checkbox\" id=\"enable_' + id + '\" class=\"provider_enabler\" CHECKED> <a href=\"' + MEDUSA.config.anonURL + url + '\" class=\"imgLink\" target=\"_new\"><img src=\"images/providers/newznab.png\" alt=\"' + name + '\" width=\"16\" height=\"16\"></a> ' + name + '</li>'; // eslint-disable-line no-undef\n\n        $('#provider_order_list').append(toAdd);\n        $('#provider_order_list').sortable('refresh');\n    }\n\n    $(this).makeNewznabProviderString();\n};\n\n$.fn.addTorrentRssProvider = function(id, name, url, cookies, titleTag) { // eslint-disable-line max-params\n    const newData = [name, url, cookies, titleTag];\n    torrentRssProviders[id] = newData;\n\n    $('#editATorrentRssProvider').append('<option value=' + id + '>' + name + '</option>');\n    $(this).populateTorrentRssSection();\n\n    if ($('#provider_order_list > #' + id).length === 0) {\n        $('#provider_order_list').append('<li class=\"ui-state-default\" id=\"' + id + '\"> <input type=\"checkbox\" id=\"enable_' + id + '\" class=\"provider_enabler\" CHECKED> <a href=\"' + MEDUSA.config.anonURL + url + '\" class=\"imgLink\" target=\"_new\"><img src=\"images/providers/torrentrss.png\" alt=\"' + name + '\" width=\"16\" height=\"16\"></a> ' + name + '</li>'); // eslint-disable-line no-undef\n        $('#provider_order_list').sortable('refresh');\n    }\n\n    $(this).makeTorrentRssProviderString();\n};\n\n$.fn.updateProvider = function(id, url, key, cat) {\n    newznabProviders[id][1][1] = url;\n    newznabProviders[id][1][2] = key;\n    newznabProviders[id][1][3] = cat;\n\n    $(this).populateNewznabSection();\n\n    $(this).makeNewznabProviderString();\n};\n\n$.fn.deleteProvider = function(id) {\n    $('#editANewznabProvider option[value=' + id + ']').remove();\n    delete newznabProviders[id];\n    $(this).populateNewznabSection();\n    $('li').remove('#' + id);\n    $(this).makeNewznabProviderString();\n};\n\n$.fn.updateTorrentRssProvider = function(id, url, cookies, titleTag) {\n    torrentRssProviders[id][1] = url;\n    torrentRssProviders[id][2] = cookies;\n    torrentRssProviders[id][3] = titleTag;\n    $(this).populateTorrentRssSection();\n    $(this).makeTorrentRssProviderString();\n};\n\n$.fn.deleteTorrentRssProvider = function(id) {\n    $('#editATorrentRssProvider option[value=' + id + ']').remove();\n    delete torrentRssProviders[id];\n    $(this).populateTorrentRssSection();\n    $('li').remove('#' + id);\n    $(this).makeTorrentRssProviderString();\n};\n\n$.fn.populateNewznabSection = function() {\n    const selectedProvider = $('#editANewznabProvider :selected').val();\n    let data = '';\n    let isDefault = '';\n    let rrcat = '';\n\n    if (selectedProvider === 'addNewznab') {\n        data = ['', '', ''];\n        isDefault = 0;\n        $('#newznab_add_div').show();\n        $('#newznab_update_div').hide();\n        $('#newznab_cat').prop('disabled', true);\n        $('#newznab_cap').prop('disabled', true);\n        $('#newznab_cat_update').prop('disabled', true);\n        $('#newznabcapdiv').hide();\n\n        $('#newznab_cat option').each(function() {\n            $(this).remove();\n        });\n\n        $('#newznab_cap option').each(function() {\n            $(this).remove();\n        });\n    } else {\n        data = newznabProviders[selectedProvider][1];\n        isDefault = newznabProviders[selectedProvider][0];\n        $('#newznab_add_div').hide();\n        $('#newznab_update_div').show();\n        $('#newznab_cat').prop('disabled', false);\n        $('#newznab_cap').prop('disabled', false);\n        $('#newznab_cat_update').prop('disabled', false);\n        $('#newznabcapdiv').show();\n    }\n\n    $('#newznab_name').val(data[0]);\n    $('#newznab_url').val(data[1]);\n    $('#newznab_api_key').val(data[2]);\n\n    // Check if not already array\n    if (typeof data[3] === 'string') {\n        rrcat = data[3].split(',');\n    } else {\n        rrcat = data[3];\n    }\n\n    // Update the category select box (on the right)\n    const newCatOptions = [];\n    if (rrcat) {\n        rrcat.forEach(cat => {\n            if (cat !== '') {\n                newCatOptions.push({\n                    text: cat,\n                    value: cat\n                });\n            }\n        });\n        $('#newznab_cat').replaceOptions(newCatOptions);\n    }\n\n    if (selectedProvider === 'addNewznab') {\n        $('#newznab_name').prop('disabled', false);\n        $('#newznab_url').prop('disabled', false);\n    } else {\n        $('#newznab_name').prop('disabled', true);\n\n        if (isDefault) {\n            $('#newznab_url').prop('disabled', true);\n            $('#newznab_delete').prop('disabled', true);\n        } else {\n            $('#newznab_url').prop('disabled', false);\n            $('#newznab_delete').prop('disabled', false);\n        }\n\n        // Get Categories Capabilities\n        if (data[0] && data[1] && data[2] && !ifExists($.fn.newznabProvidersCapabilities, data[0])) {\n            $(this).getCategories(isDefault, data);\n        }\n        $(this).updateNewznabCaps(null, data);\n    }\n};\n\n/**\n * Updates the Global array $.fn.newznabProvidersCapabilities with a combination of newznab prov name\n * and category capabilities. Return\n * @param {Array} newzNabCaps, is the returned object with newznabprovider Name and Capabilities.\n * @param {Array} selectedProvider\n * @return no return data. The multiselect input $(\"#newznab_cap\") is updated, as a result.\n */\n$.fn.updateNewznabCaps = function(newzNabCaps, selectedProvider) {\n    if (newzNabCaps && !ifExists($.fn.newznabProvidersCapabilities, selectedProvider[0])) {\n        $.fn.newznabProvidersCapabilities.push({\n            name: selectedProvider[0],\n            categories: newzNabCaps.tv_categories // eslint-disable-line camelcase\n        });\n    }\n\n    // Loop through the array and if currently selected newznab provider name matches one in the array, use it to\n    // update the capabilities select box (on the left).\n    $('#newznab_cap').empty();\n    if (selectedProvider[0]) {\n        $.fn.newznabProvidersCapabilities.forEach(newzNabCap => {\n            if (newzNabCap.name && newzNabCap.name === selectedProvider[0] && Array.isArray(newzNabCap.categories)) {\n                const newCapOptions = [];\n                newzNabCap.categories.forEach(categorySet => {\n                    if (categorySet.id && categorySet.name) {\n                        newCapOptions.push({\n                            value: categorySet.id,\n                            text: categorySet.name + '(' + categorySet.id + ')'\n                        });\n                    }\n                });\n                $('#newznab_cap').replaceOptions(newCapOptions);\n            }\n        });\n    }\n};\n\n$.fn.makeNewznabProviderString = function() {\n    const provStrings = [];\n\n    for (const id in newznabProviders) {\n        if ({}.hasOwnProperty.call(newznabProviders, id)) {\n            provStrings.push(newznabProviders[id][1].join('|'));\n        }\n    }\n\n    $('#newznab_string').val(provStrings.join('!!!'));\n};\n\n$.fn.populateTorrentRssSection = function() {\n    const selectedProvider = $('#editATorrentRssProvider :selected').val();\n    let data = '';\n\n    if (selectedProvider === 'addTorrentRss') {\n        data = ['', '', '', 'title'];\n        $('#torrentrss_add_div').show();\n        $('#torrentrss_update_div').hide();\n    } else {\n        data = torrentRssProviders[selectedProvider];\n        $('#torrentrss_add_div').hide();\n        $('#torrentrss_update_div').show();\n    }\n\n    $('#torrentrss_name').val(data[0]);\n    $('#torrentrss_url').val(data[1]);\n    $('#torrentrss_cookies').val(data[2]);\n    $('#torrentrss_title_tag').val(data[3]);\n\n    if (selectedProvider === 'addTorrentRss') {\n        $('#torrentrss_name').prop('disabled', false);\n        $('#torrentrss_url').prop('disabled', false);\n        $('#torrentrss_cookies').prop('disabled', false);\n        $('#torrentrss_title_tag').prop('disabled', false);\n    } else {\n        $('#torrentrss_name').prop('disabled', true);\n        $('#torrentrss_url').prop('disabled', false);\n        $('#torrentrss_cookies').prop('disabled', true);\n        $('#torrentrss_title_tag').prop('disabled', false);\n        $('#torrentrss_delete').prop('disabled', false);\n    }\n};\n\n$.fn.makeTorrentRssProviderString = function() {\n    const provStrings = [];\n    torrentRssProviders.forEach(provider => {\n        provStrings.push(provider.join('|'));\n    });\n\n    $('#torrentrss_string').val(provStrings.join('!!!'));\n};\n\n$.fn.refreshProviderList = function() {\n    const idArr = $('#provider_order_list').sortable('toArray');\n    const finalArr = [];\n    $.each(idArr, (key, val) => {\n        const checked = $('#enable_' + val).is(':checked') ? '1' : '0';\n        finalArr.push(val + ':' + checked);\n    });\n\n    $('#provider_order').val(finalArr.join(' '));\n    $(this).refreshEditAProvider();\n};\n\n$.fn.refreshEditAProvider = function() {\n    $('#provider-list').empty();\n\n    const idArr = $('#provider_order_list').sortable('toArray');\n    const finalArr = [];\n    $.each(idArr, (key, val) => {\n        if ($('#enable_' + val).prop('checked')) {\n            finalArr.push(val);\n        }\n    });\n\n    if (finalArr.length > 0) {\n        $('<select>').prop('id', 'editAProvider').addClass('form-control input-sm').appendTo('#provider-list');\n        for (let i = 0, len = finalArr.length; i < len; i++) {\n            const provider = finalArr[i];\n            $('#editAProvider').append($('<option>').prop('value', provider).text($.trim($('#' + provider).text()).replace(/\\s\\*$/, '').replace(/\\s\\*\\*$/, '')));\n        }\n    } else {\n        document.getElementsByClassName('component-desc')[0].innerHTML = 'No providers available to configure.';\n    }\n\n    $(this).showHideProviders();\n};\n\n$(this).on('change', '.newznab_api_key', function() {\n    let providerId = $(this).prop('id');\n    providerId = providerId.substring(0, providerId.length - '_hash'.length);\n\n    const url = $('#' + providerId + '_url').val();\n    const cat = $('#' + providerId + '_cat').val();\n    const key = $(this).val();\n\n    $(this).updateProvider(providerId, url, key, cat);\n});\n\n$('#newznab_api_key,#newznab_url').on('change', function() {\n    const selectedProvider = $('#editANewznabProvider :selected').val();\n\n    if (selectedProvider === 'addNewznab') {\n        return;\n    }\n\n    const url = $('#newznab_url').val();\n    const key = $('#newznab_api_key').val();\n    const cat = $('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(',');\n\n    $(this).updateProvider(selectedProvider, url, key, cat);\n});\n\n$('#torrentrss_url,#torrentrss_cookies,#torrentrss_title_tag').on('change', function() {\n    const selectedProvider = $('#editATorrentRssProvider :selected').val();\n\n    if (selectedProvider === 'addTorrentRss') {\n        return;\n    }\n\n    const url = $('#torrentrss_url').val();\n    const cookies = $('#torrentrss_cookies').val();\n    const titleTag = $('#torrentrss_title_tag').val();\n\n    $(this).updateTorrentRssProvider(selectedProvider, url, cookies, titleTag);\n});\n\n$('body').on('change', '#editAProvider', function() {\n    $(this).showHideProviders();\n});\n\n$('#editANewznabProvider').on('change', function() {\n    $(this).populateNewznabSection();\n});\n\n$('#editATorrentRssProvider').on('change', function() {\n    $(this).populateTorrentRssSection();\n});\n\n$(this).on('click', '.provider_enabler', function() {\n    $(this).refreshProviderList();\n});\n\n$('#newznab_cat_update').on('click', function() {\n    // Maybe check if there is anything selected?\n    $('#newznab_cat option').each(function() {\n        $(this).remove();\n    });\n\n    const newOptions = [];\n\n    // When the update botton is clicked, loop through the capabilities list\n    // and copy the selected category id's to the category list on the right.\n    $('#newznab_cap option:selected').each(function() {\n        const selectedCat = $(this).val();\n        console.debug(selectedCat);\n        newOptions.push({\n            text: selectedCat,\n            value: selectedCat\n        });\n    });\n\n    $('#newznab_cat').replaceOptions(newOptions);\n\n    const selectedProvider = $('#editANewznabProvider :selected').val();\n    if (selectedProvider === 'addNewznab') {\n        return;\n    }\n\n    const url = $('#newznab_url').val();\n    const key = $('#newznab_api_key').val();\n    const cat = $('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(',');\n\n    $('#newznab_cat option:not([value])').remove();\n\n    $(this).updateProvider(selectedProvider, url, key, cat);\n});\n\n$('#newznab_add').on('click', () => {\n    const name = $.trim($('#newznab_name').val());\n    const url = $.trim($('#newznab_url').val());\n    const key = $.trim($('#newznab_api_key').val());\n    const cat = $.trim($('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(','));\n\n    if (!name || !url || !key) {\n        return;\n    }\n\n    const params = { name };\n\n    $.getJSON('config/providers/canAddNewznabProvider', params, function(data) {\n        if (data.error !== undefined) {\n            alert(data.error); // eslint-disable-line no-alert\n            return;\n        }\n        $(this).addProvider(data.success, name, url, key, cat, 0);\n    });\n});\n\n$('.newznab_delete').on('click', function() {\n    const selectedProvider = $('#editANewznabProvider :selected').val();\n    $(this).deleteProvider(selectedProvider);\n});\n\n$('#torrentrss_add').on('click', () => {\n    const name = $('#torrentrss_name').val();\n    const url = $('#torrentrss_url').val();\n    const cookies = $('#torrentrss_cookies').val();\n    const titleTag = $('#torrentrss_title_tag').val();\n    const params = {\n        name,\n        url,\n        cookies,\n        title_tag: titleTag // eslint-disable-line camelcase\n    };\n\n    $.getJSON('config/providers/canAddTorrentRssProvider', params, function(data) {\n        if (data.error !== undefined) {\n            console.error(data.error);\n            return;\n        }\n\n        $(this).addTorrentRssProvider(data.success, name, url, cookies, titleTag);\n        $(this).refreshEditAProvider();\n    });\n});\n\n$('.torrentrss_delete').on('click', function() {\n    $(this).deleteTorrentRssProvider($('#editATorrentRssProvider :selected').val());\n    $(this).refreshEditAProvider();\n});\n\n$(this).on('change', '[class=\"providerDiv_tip\"] input', function() {\n    $('div .providerDiv [name=' + $(this).prop('name') + ']').replaceWith($(this).clone());\n    $('div .providerDiv [newznab_name=' + $(this).prop('id') + ']').replaceWith($(this).clone());\n});\n\n$(this).on('change', '[class=\"providerDiv_tip\"] select', function() {\n    $(this).find('option').each(function() {\n        if ($(this).is(':selected')) {\n            $(this).prop('defaultSelected', true);\n        } else {\n            $(this).prop('defaultSelected', false);\n        }\n    });\n    $('div .providerDiv [name=' + $(this).prop('name') + ']').empty().replaceWith($(this).clone());\n});\n\n$(this).on('change', '.enabler', function() {\n    if ($(this).is(':checked')) {\n        $('.content_' + $(this).prop('id')).each(function() {\n            $(this).show();\n        });\n    } else {\n        $('.content_' + $(this).prop('id')).each(function() {\n            $(this).hide();\n        });\n    }\n});\n\n$('.enabler').each(function() {\n    if ($(this).is(':checked')) {\n        $('.content_' + $(this).prop('id')).show();\n    } else {\n        $('.content_' + $(this).prop('id')).hide();\n    }\n});\n\n$.fn.makeTorrentOptionString = function(providerId) {\n    const seedRatio = $('.providerDiv_tip #' + providerId + '_seed_ratio').prop('value');\n    const seedTime = $('.providerDiv_tip #' + providerId + '_seed_time').prop('value');\n    const processMet = $('.providerDiv_tip #' + providerId + '_process_method').prop('value');\n    const optionString = $('.providerDiv_tip #' + providerId + '_option_string');\n\n    optionString.val([seedRatio, seedTime, processMet].join('|'));\n};\n\n$(this).on('change', '.seed_option', function() {\n    const providerId = $(this).prop('id').split('_')[0];\n    $(this).makeTorrentOptionString(providerId);\n});\n\n$.fn.replaceOptions = function(options) {\n    this.empty();\n\n    const self = this;\n\n    $.each(options, (index, option) => {\n        const $option = $('<option></option>').prop('value', option.value).text(option.text);\n        self.append($option);\n    });\n};\n\n// Initialization stuff\n$.fn.newznabProvidersCapabilities = [];\n\n$(this).showHideProviders();\n\n$('#provider_order_list').sortable({\n    placeholder: 'ui-state-highlight',\n    update() {\n        $(this).refreshProviderList();\n    }\n});\n\n$('#provider_order_list').disableSelection();\n\nif ($('#editANewznabProvider').length !== 0) {\n    $(this).populateNewznabSection();\n}\n"]}