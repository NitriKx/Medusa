{"version":3,"sources":["js/routes/manage/node_modules/browser-pack/_prelude.js","js/routes/manage/static/js/routes/manage/init.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","makeEpisodeRow","indexerId","season","episode","name","checked","val","makeSubtitleRow","subtitles","row","split","forEach","subtitle"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCkCAI,EAAOJ,QAlCM,MACTK,EAAEC,eAAiB,SAASC,EAAWC,EAAQC,EAASC,EAAMC,GAC1D,kCACiBN,EAAE,cAAcO,cAAcL,yGAEPA,oBAA4BA,KAAaC,KAAUC,MAAYE,EAAU,WAAa,6BACpHH,KAAUC,kEAC6BC,uCAKrDL,EAAEQ,gBAAkB,SAASN,EAAWC,EAAQC,EAASC,EAAMI,EAAWH,GACtE,IAAII,EAAM,GAiBV,OAhBAA,GAAO,wBAA0BR,EAAY,KAC7CQ,GAAO,oDAAsDR,EAAY,mBAAqBA,EAAY,IAAMC,EAAS,IAAMC,EAAU,KAAOE,EAAU,WAAa,IAAM,SAC7KI,GAAO,0BAA4BP,EAAS,IAAMC,EAAU,QACxDK,EAAUZ,OAAS,GACnBa,GAAO,2BACPD,EAAYA,EAAUE,MAAM,MAClBC,QAAQC,IACdH,GAAO,oCAAsCG,EAAW,qCAAuCA,EAAW,eAE9GH,GAAO,SAEPA,GAAO,2CAEXA,GAAO,OAASL,EAAO,QACvBK,GAAO","file":"init.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const init = () => {\n    $.makeEpisodeRow = function(indexerId, season, episode, name, checked) { // eslint-disable-line max-params\n        return `\n            <tr class=\"${$('#row_class').val()} show-${indexerId}\">\n            <td class=\"tableleft\" align=\"center\">\n                <input type=\"checkbox\" class=\"${indexerId}-epcheck\" name=\"${indexerId}-${season}x${episode}\" ${checked ? ' checked' : ''}></td>\n            <td>${season}x${episode}</td>\n            <td class=\"tableright\" style=\"width: 100%\">${name}</td>\n            </tr>\n        `;\n    };\n\n    $.makeSubtitleRow = function(indexerId, season, episode, name, subtitles, checked) { // eslint-disable-line max-params\n        let row = '';\n        row += '<tr class=\"good show-' + indexerId + '\">';\n        row += '<td align=\"center\"><input type=\"checkbox\" class=\"' + indexerId + '-epcheck\" name=\"' + indexerId + '-' + season + 'x' + episode + '\"' + (checked ? ' checked' : '') + '></td>';\n        row += '<td style=\"width: 2%;\">' + season + 'x' + episode + '</td>';\n        if (subtitles.length > 0) {\n            row += '<td style=\"width: 8%;\">';\n            subtitles = subtitles.split(',');\n            subtitles.forEach(subtitle => {\n                row += '<img src=\"images/subtitles/flags/' + subtitle + '.png\" width=\"16\" height=\"11\" alt=\"' + subtitle + '\" />&nbsp;';\n            });\n            row += '</td>';\n        } else {\n            row += '<td style=\"width: 8%;\">No subtitles</td>';\n        }\n        row += '<td>' + name + '</td>';\n        row += '</tr>';\n\n        return row;\n    };\n};\n\nmodule.exports = init;\n"]}